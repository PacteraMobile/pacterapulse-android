/*
 * Copyright (c) 2015 Pactera. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * THIS CODE IS PROVIDED AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS
 * OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION
 * ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A
 * PARTICULAR PURPOSE, MERCHANTABILITY OR NON-INFRINGEMENT.
 *
 * See the Apache License, Version 2.0 for the specific language
 * governing permissions and limitations under the License.
 */

buildscript {
	repositories {
		maven { url 'https://maven.fabric.io/public' }
	}

	dependencies {
		classpath 'io.fabric.tools:gradle:1.19.0'
	}
}

buildscript {
	repositories {
		mavenCentral()
	}
}

repositories {
	mavenCentral()
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
	maven { url 'https://maven.fabric.io/public' }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 4

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
def time = new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))

def isTravis = "true".equals(System.getenv("TRAVIS"))

android {
	signingConfigs {
		Pactera {
			keyPassword '1a2b3c4d5e'
			storeFile file('../keys/Pactera.jks')
			storePassword '1a2b3c4d5e'
			keyAlias 'PacteraRelease'
		}
	}
	compileSdkVersion 22
	buildToolsVersion "22.0.1"


	packagingOptions {
		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
		exclude 'LICENSE.txt'
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/services/javax.annotation.processing.Processor'
	}


	defaultConfig {
		applicationId "au.com.pactera.pacterapulse"
		minSdkVersion 14
		targetSdkVersion 22

		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch * 1
		versionName "${versionMajor}.${versionMinor}.${versionPatch}-${time}"
		buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
		buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	buildTypes {
		debug {
			applicationIdSuffix '.dev'
			versionNameSuffix '-dev'
			minifyEnabled false
		}
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.Pactera
		}
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')
	compile 'com.android.support:support-v4:22.1.1'
	compile 'com.jakewharton:butterknife:6.1.0'
	compile 'com.github.kevinsawicki:http-request:5.6'
	compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
		transitive = true;
	}
	compile('de.keyboardsurfer.android.widget:crouton:1.8.5@aar') {
		exclude group: 'com.google.android', module: 'support-v4'
	}
	compile('com.microsoft.aad:adal:1.1.5') {
		exclude group: 'com.android.support'
	}

	androidTestCompile 'com.android.support.test:runner:+'
	androidTestCompile 'com.android.support.test:rules:+'
	androidTestCompile 'com.android.support.test.espresso:espresso-core:+'

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.10.19'
}
